<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->

<!DOCTYPE bindings [
<!ENTITY % tabBrowserDTD SYSTEM "chrome://browser/locale/tabbrowser.dtd" >
%tabBrowserDTD;
]>

<bindings id="verticalTabBrowserBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

<binding id="tabbrowser-arrowscrollbox" extends="chrome://browser/content/tabbrowser.xml#tabbrowser-arrowscrollbox">
	<implementation>
      <property name="_verticalTabs" onget="return this.orient == 'vertical';"/>
    </implementation>

    <handlers>
      <handler event="underflow" phase="capturing"><![CDATA[
        if (event.detail == (this._verticalTabs ? 1 : 0))
          return; // Ignore other-direction events

        var tabs = document.getBindingParent(this);
        tabs.removeAttribute("overflow");

        if (tabs._lastTabClosedByMouse)
          tabs._expandSpacerBy(this._scrollButtonDown.clientWidth);

        tabs.tabbrowser._removingTabs.forEach(tabs.tabbrowser.removeTab, tabs.tabbrowser);

        tabs._positionPinnedTabs();
      ]]></handler>
      <handler event="overflow"><![CDATA[
        if (event.detail == (this._verticalTabs ? 1 : 0))
          return; // Ignore other-direction events
        var tabs = document.getBindingParent(this);
        var numberOfTabs = tabs.tabbrowser.visibleTabs.length;
        if (numberOfTabs == 1)
          return;

        tabs.setAttribute("overflow", "true");
        tabs._positionPinnedTabs();
        tabs._handleTabSelect(false);
      ]]></handler>
    </handlers>
  </binding>

<binding id="tabbrowser-tabs"
           extends="chrome://browser/content/tabbrowser.xml#tabbrowser-tabs">
    <content>
      <xul:hbox align="end">
        <xul:image class="tab-drop-indicator" anonid="tab-drop-indicator" collapsed="true"/>
      </xul:hbox>
      <xul:arrowscrollbox anonid="arrowscrollbox"
                          flex="1"
                          xbl:inherits="orient"
                          style="min-width: 40px;"
                          clicktoscroll="true"
                          class="tabbrowser-arrowscrollbox">
        <children includes="tab"/>
        <children/>
        <xul:toolbarbutton class="tabs-newtab-button"
                           command="cmd_newNavigatorTab"
                           onclick="checkForMiddleClick(this, event);"
                           onmouseover="document.getBindingParent(this)._enterNewTab();"
                           onmouseout="document.getBindingParent(this)._leaveNewTab();"
                           tooltip="dynamic-shortcut-tooltip"/>
        <xul:spacer class="closing-tabs-spacer" anonid="closing-tabs-spacer"
                    style="width: 0;"/>
      </xul:arrowscrollbox>
    </content>

    <implementation implements="nsIDOMEventListener">
		<constructor>
		<![CDATA[ 
			Cu.import("resource://gre/modules/Services.jsm");
			Services.scriptloader.loadSubScript("resource://verticaltabs-at-shepherdson-dot-name/lib/xbl.js", this);
		]]>	
		</constructor>
      <field name="mTabstripHeight">0</field>

      <property name="_verticalTabs" onget="return this.orient == 'vertical';"/>

      <!-- Try to keep the active tab's close button under the mouse cursor -->
      <method name="_lockTabSizing">
        <parameter name="aTab"/>
        <body><![CDATA[
          // XXX I don't think this is necessary for vertical tabs
          return;
        ]]></body>
      </method>

      <method name="_unlockTabSizing">
        <body><![CDATA[
          // XXX I don't think this is necessary for vertical tabs
          return;
        ]]></body>
      </method>

      <!--<method name="_positionPinnedTabs">
        <body><![CDATA[

        ]]></body>
      </method>-->

      <!--<method name="_animateTabMove">
        <parameter name="event"/>
        <body><![CDATA[
          
        ]]></body>
      </method>

      <method name="handleEvent">
        <parameter name="aEvent"/>
        <body><![CDATA[
			handleEvent(aEvent);
        ]]></body>
      </method>-->

      <!-- XXX todo: implement notifyBackgroundtab for vertical tabs-->

      <!--<method name="_getDropIndex">
        <parameter name="event"/>
        <body><![CDATA[

        ]]></body>
      </method>-->
    </implementation>

    <handlers>
      <handler event="dragover"><![CDATA[
		dragover(event);
      ]]></handler>

      <handler event="dragend"><![CDATA[
		dragend(event);
      ]]></handler>
    </handlers>
  </binding>
</bindings>
